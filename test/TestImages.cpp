#include "TestImages.h"

std::vector<float> depths8x8{ 
				1, 1, 0, 0, 0.1, 0.0, 0.2, 1.0,
				1, 1, 0, 0, 0.1, 0.0, 0.2, 0.4,
				1, 1, 0, 0, 0.1, 0.0, 0.2, 0.4,
				1, 1, 0, 0, 0.1, 0.0, 0.2, 0.4,
				0, 0, 0, 0, 0.1, 0.2, 0.2, 0.4,
				0, 0, 0, 0, 0.1, 0.2, 0.2, 0.4,
				0, 0, 0, 0, 0.1, 0.2, 0.3, 0.4,
				0, 0, 0, 0, 0.1, 0.2, 0.3, 0.4};

std::vector<float> depths16x16 {
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.4, 0.3, 0.2, 0.4, 0.4, 0.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.1, 0.1, 1.0, 1.0,
	0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.1, 0.1, 1.0, 1.0
};


std::vector<float> depths32x32 {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 0.63008, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 0.637901, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 0.645722, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 0.653543, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 0.661364, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 0.669185, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.656916, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 0.677006, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 0.684827, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.658595, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 0.692648, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 0.700469, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.673203, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 0.70829, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 0.716111, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 0.723933, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 0.731754, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 0.739575, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 0.747396, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 0.755217, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 0.763038, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
};


std::vector<float> getDepths8x8() {
	return depths8x8;
}

std::vector<float> getOnes8x8() {
	vector<float> ones(64, 1.0);
	return ones;
}

std::vector<float> getZeroes8x8() {
	vector<float> zeroes(64, 0.0);
	return zeroes;
}

std::vector<float> getDepths16x16() {
	return depths16x16;
}

std::vector<float> getDepths32x32() {
	return depths32x32;
}

